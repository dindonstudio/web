%btn-reset,
.btnReset {
	padding: 0;
	background: none;
	border: none;
	outline: none;
	font-family: $font-sans;
	color: inherit;
	cursor: pointer;
	text-transform: inherit;
	appearance: none;
}

.btn {
	@extend %btn-reset;

	display: inline-flex;
	position: relative;
	z-index: 0;
	overflow: hidden;
	align-items: center;
	justify-content: center;
	color: inherit;
	user-select: none;
	white-space: nowrap;
	text-decoration: none;

	&:disabled {
		pointer-events: none;
	}

	.spinner {
		position: absolute;
		top: 50%;
		left: 50%;
		opacity: 0;
		transform: translate3d(-50%, calc(-50% + 4rem), 0);
	}

	.children,
	.spinner {
		transition: border 1s $expo-out, transform 0.9s $quart-inout, opacity 0.9s $quart-inout;
	}

	&.isLoading {
		overflow: hidden;
		pointer-events: none;

		.children,
		.spinner {
			transition-duration: 0.6s;
			transition-timing-function: $expo-out;
		}

		.children {
			opacity: 0;
			transform: translate3d(0, -4rem, 0);
		}

		.spinner {
			opacity: 1;
			transform: translate3d(-50%, -50%, 0);
		}
	}

	&.underlined {
		display: inline-block;

		&::after {
			transform: translate3d(calc(-100% - 1px), 0, 0);
			transition: transform 0.6s $quart-inout;
			pointer-events: none;

			@include line(currentColor);
		}

		&.isActive {
			&::after {
				transform: none;
				transition-timing-function: $expo-out;
			}
		}

		@media (hover: hover) {
			overflow: hidden;

			&:hover {
				&::after {
					transform: none;
					transition-timing-function: $expo-out;
				}
			}
		}
	}

	&.circle {
		width: 4.4rem;
		height: 4.4rem;
		border-radius: 50%;
		transition: all 0.6s $quart-out;
		transition-property: color, background-color;

		@include tablet {
			width: 50px;
			height: 50px;
		}

		@include desktop {
			width: 5rem;
			height: 5rem;
		}

		&::before {
			border-radius: 50%;
		}

		svg {
			// transition: opacity 0.5s $quart-out;

			@include tablet {
				width: 15px;
			}
		}

		&:disabled {
			svg {
				opacity: 0.2;
			}
		}
	}

	&.rounded {
		--background-color: #{$white};
		--color: #{$greenDark};

		height: 4.4rem;
		padding: 1rem 2rem;
		background: var(--background-color);
		border-radius: 5rem;
		font-size: clampfont(1.3rem);
		color: var(--color);
		transition: all 0.6s $quart-out;
		transition-property: border, color, background-color;

		// @include tablet {
		// 	height: 50px;
		// 	padding: 10px 25px;
		// }

		@include desktop {
			font-size: 1.3rem;
		}

		svg {
			margin-right: 1rem;

			@include tablet {
				width: 16px;
				height: auto;
				margin-right: 10px;
			}
		}

		&:disabled {
			svg {
				opacity: 0.2;
			}
		}

		@include hover {
			background: var(--hover-background-color, var(--color));
			color: var(--background-color);
			transition-duration: 0.2s;
		}
	}

	&.inverted {
		background-color: var(--color);
		border: 1px solid var(--color);
		color: var(--background-color);

		@include hover {
			background: var(--hover-background-color, var(--background-color));
			color: var(--color);
		}
	}

	&.transparent {
		background: transparent;
		border: 1px solid var(--background-color);
		color: var(--background-color);

		@include hover {
			background: var(--hover-background-color, var(--background-color));
			border-color: var(--hover-background-color, var(--background-color));
			color: var(--color);
		}
	}

	&.hoverTransparent {
		position: relative;
		border: 1px solid var(--background-color);

		&::after {
			content: '';
			position: absolute;
			top: 1px;
			right: 1px;
			bottom: 1px;
			left: 1px;
			pointer-events: none;
		}

		&.rounded {
			&::after {
				border-radius: 5rem;
			}
		}

		&.circle {
			&::after {
				border-radius: 50%;
			}
		}

		&.inverted {
			&::after {
				border-color: var(--color);
			}
		}
	}
}
